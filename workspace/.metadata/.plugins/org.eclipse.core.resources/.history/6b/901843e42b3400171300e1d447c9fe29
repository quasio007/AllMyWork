package callable.future;

import java.util.Random;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class CallableAndFuture {

	public static void main(String[] args) {
ExecutorService executor =Executors.newCachedThreadPool();
executor.submit(new Callable<Mathematics>() {

	@Override
	public Mathematics call() throws Exception {
		Random random =new Random();
		System.out.println("Starting...");
		Thread.sleep(random.nextInt(4000));
		System.out.println("Finished");
		return new Mathematics(10,5);
	}
});
executor.shutdown();
try {
	executor.awaitTermination(1, TimeUnit.HOURS);
} catch (InterruptedException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}



}
}
