package dem;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;



public class Try {

	public static void main(String[] args) throws Exception{

		ExecutorService executor = Executors.newCachedThreadPool();
		for (int i = 0; i < 200; i++) {
			executor.submit(new Runnable() {
				public void run() {
					Connection.getInstance().doConnect();
				}
			});
			executor.shutdown();
			try {
				executor.awaitTermination(1, TimeUnit.HOURS);
			} catch (InterruptedException e) {
			
				e.printStackTrace();
			}
			

		}
	}
//	 public static void main(String[] args) throws Exception {
//	 ExecutorService executor = Executors.newCachedThreadPool();
//	
//	 for (int i = 0; i < 200; i++) { //200 hundred times will be called
//	 executor.submit(new Runnable() {
//	 public void run() {
//	 Connection.getInstance().doConnect();
//	 }
//	 });
//	 }
//	
//	 executor.shutdown();
//	 executor.awaitTermination(1, TimeUnit.DAYS);
//	 }

}
