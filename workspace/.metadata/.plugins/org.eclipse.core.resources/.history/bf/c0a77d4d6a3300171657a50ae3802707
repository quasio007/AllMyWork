package dem;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class Try {

//	public static void main(String[] args) throws Exception {
//		// TODO Auto-generated method stub
//Thread t1 =new Thread(new Runnable() {
//	
//	@Override
//	public void run() {
//		// TODO Auto-generated method stub
//		Connection.getInstance().doConnect();
//	}
//});
//Thread t2 =new Thread(new Runnable() {
//	
//	@Override
//	public void run() {
//		// TODO Auto-generated method stub
//		Connection.getInstance().doConnect();
//	}
//});
//t1.start();
//t1.start();
//
//t2.join();
//t2.join();
//
//	}
	   public static void main(String[] args) throws Exception {
	        ExecutorService executor = Executors.newCachedThreadPool();

	        for (int i = 0; i < 200; i++) { //200 hundred times will be called
	            executor.submit(new Runnable() {
	                public void run() {
	                    Connection.getInstance().doConnect();
	                }
	            });
	        }

	        executor.shutdown();
	        executor.awaitTermination(1, TimeUnit.DAYS);
	    }

}
